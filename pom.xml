<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>JPATWO</groupId>
	<artifactId>JPATWO</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<appengine.app.version>1</appengine.app.version>
		<appengine.target.version>1.9.25</appengine.target.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.2.3.RELEASE</spring.version>
		<datanucleus.version>3.1.3</datanucleus.version>
		<jersey.version>2.21</jersey.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- <dependency> <groupId>org.glassfish.jersey</groupId> <artifactId>jersey-bom</artifactId> 
				<version>${jersey.version}</version> <type>pom</type> <scope>import</scope> 
				</dependency> -->

		</dependencies>


	</dependencyManagement>

	<dependencies>

		<!--Jersey dependencies -->
		<!-- <dependency> <groupId>org.glassfish.jersey.containers</groupId> <artifactId>jersey-container-servlet-core</artifactId> 
			use the following artifactId if you don't need servlet 2.x compatibility 
			<artifactId>jersey-container-servlet</artifactId> </dependency> <dependency> 
			<groupId>org.glassfish.jersey.media</groupId> <artifactId>jersey-media-moxy</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
			<version>1.19</version>
		</dependency>

		<!-- Google App Engine dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${appengine.target.version}</version>
			<!-- <exclusions> -->
			<!-- <exclusion> -->
			<!-- <artifactId>datanucleus-core</artifactId> -->
			<!-- <groupId>org.datanucleus</groupId> -->
			<!-- </exclusion> -->
			<!-- <exclusion> -->
			<!-- <groupId>org.datanucleus</groupId> -->
			<!-- <artifactId>datanucleus-api-jpa</artifactId> -->
			<!-- </exclusion> -->
			<!-- </exclusions> -->
		</dependency>

		<dependency>
			<!-- Google App Engine supports both JPA1 and JPA2. JPA1: datanucleus 
				appengine plugin v1 (1.0.10) + datanucleus v1 (1.1.5) JPA2: datanucleus appengine 
				plugin v2 (2.1.1) + datanucleus v3 (3.1.1) -->

			<groupId>com.google.appengine.orm</groupId>
			<artifactId>datanucleus-appengine</artifactId>
			<version>2.1.2</version>
			<exclusions>
				<exclusion>
					<groupId>org.datanucleus</groupId>
					<artifactId>datanucleus-enhancer</artifactId>
				</exclusion>
				<!-- <exclusion> -->
				<!-- <artifactId>datanucleus-core</artifactId> -->
				<!-- <groupId>org.datanucleus</groupId> -->
				<!-- </exclusion> -->
			</exclusions>
		</dependency>

		<!-- Other dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jpa_2.0_spec</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<dependency>
			<!-- datanucleus-core is not needed for compilation. in fact, it cannot 
				have compile scope because the datanucleus plugin automatically adds it during 
				enhancement and complains if there are two copies. app should not depend 
				on any classes in this lib anyways. -->

			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>${datanucleus.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>transaction-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<!-- datanucleus-jpa is needed during compilation for its @Extension annotation 
				which is used throughout entity classes -->
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jpa</artifactId>
			<version>${datanucleus.version}</version>

		</dependency>
		<dependency>
			<!-- normally this library is only needed when using JDO however datanucleus 
				throws some JDO exceptions even when using JPA. there are several places 
				in our code that explicitly catch these JDO exceptions therefore it is needed 
				during compilation -->
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jdo</artifactId>
			<version>${datanucleus.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>transaction-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
<!-- 		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.0.0</version>
		</dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.5</version>
		</dependency>
		<!-- Test Dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${appengine.target.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${appengine.target.version}</version>
			<scope>test</scope>
		</dependency>


	</dependencies>


	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warSourceDirectory>war</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archiveClasses>false</archiveClasses>
					<webResources>
						<!-- in order to interpolate version from pom into appengine-web.xml -->

						<resource>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<version>${appengine.target.version}</version>
			</plugin>

			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>${datanucleus.version}</version>

				<configuration>
					<api>JPA</api>
					<mappingIncludes>**/model/*.class</mappingIncludes>
					<verbose>true</verbose>
				</configuration>

				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<!-- force maven-datanucleus-plugin to use the same version of datanucleus-core -->
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>${datanucleus.version}</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>
</project>